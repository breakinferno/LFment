{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./service.js","webpack:///./constant.js","webpack:///./utils.js","webpack:///./index.js","webpack:///./comment.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","axios","RSA","constant","logger","signer","encryptData","verifier","pubKEY","pubData","uuid","v4","baseConfig","url","method","baseURL","SERVER_URL","headers","X-Requested-With","params","timeout","withCredentials","auth","username","password","responseType","xsrfCookieName","xsrfHeaderName","maxContentLength","maxRedirects","handleResult","response","status","statustText","config","request","keys","code","msg","Promise","resolve","reject","Error","handleErr","error","message","asyncDima","promise","then","catch","err","asyncTask","async","asyncFunc","resulter","catcher","_ref","_ref2","_slicedToArray","res","rt","Service","_classCallCheck","this","AppKey","AppSecret","_extends","sendRequest","appkey","timestamp","Date","now","nData","reduce","options","X-Requested-ID","dataHandler","ADD_COMMENT_URL","commentId","DELETE_COMMENT_URL","GET_COMMENTS_URL","userId","targetId","UPDATEEXTRA","SET_EXTRA","SETEXTRA","UPDATE_EXTRA","crypto","checkType","target","dist","split","map","trim","some","toString","toUpperCase","getType","toLowerCase","_typeof","console","log","genSigString","secret","obj","sort","sortKeys","str","JSON","stringify","version","format","rtStr","genSignature","alg","arguments","undefined","sign","createHash","update","digest","rencrypt","forEach","k","encrypt","sig","comments","utils","sdk","default","service","LFment","Appkey","App","init","__setAuth","__test","comment","lackPropName","every","propName","sendComment","deleteComment","deleteUserComments","deleteTargetComments","getCommentById","prop","getCommentByTarget","getCommentByUser","extra","setExtra","updateExtra"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([90,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const axios = require('axios');\nconst RSA = require('node-rsa')\nconst constant =  require('./constant');\nconst {logger, signer, verifier, encryptData} = require('./utils');\nconst pubData = `-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCKIzX+dU/e+xot+qlHoDbweVaW\nMUjGUVCsUTbT/y8ifsNN1NnQ9vCCBGr+vmM+cTqInYVWxM3W2udc0eOD9a33nybF\no8W7rwKmK1ZgE0nt5eHe1q45knGKNelB8FiDKteVTEGHDVNCGc8nkMvQMSd2AZtj\nEa0KPY39RCqOWJlIfQIDAQAB\n-----END PUBLIC KEY-----`\nconst pubKEY = new RSA(pubData, 'pkcs8-public-pem')// import config from './config';\nconst uuid = require('node-uuid').v4\n\nconst baseConfig ={\n    // `url` 是用于请求的服务器 URL\n    url: '/',\n    // `method` 是创建请求时使用的方法\n    method: 'get', // 默认是 get\n    // `baseURL` 将自动加在 `url` 前面，除非 `url` 是一个绝对 URL。\n    // 它可以通过设置一个 `baseURL` 便于为 axios 实例的方法传递相对 URL\n    baseURL: constant.SERVER_URL,\n    // `transformRequest` 允许在向服务器发送前，修改请求数据\n    // 只能用在 'PUT', 'POST' 和 'PATCH' 这几个请求方法\n    // 后面数组中的函数必须返回一个字符串，或 ArrayBuffer，或 Stream\n    // transformRequest: [function (data) {\n    //     // 对 data 进行任意转换处理\n    //     return data;\n    // }],\n    // // `transformResponse` 在传递给 then/catch 前，允许修改响应数据\n    // transformResponse: [function (data) {\n    //     // 对 data 进行任意转换处理\n    //     return data;\n    // }],\n    // `headers` 是即将被发送的自定义请求头\n    headers: {'X-Requested-With': 'XMLHttpRequest'},\n    // `params` 是即将与请求一起发送的 URL 参数\n    // 必须是一个无格式对象(plain object)或 URLSearchParams 对象\n    params: {},\n    // `paramsSerializer` 是一个负责 `params` 序列化的函数\n    // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n    // paramsSerializer: function(params) {\n    //     // return Qs.stringify(params, {arrayFormat: 'brackets'})\n    // },\n    // `data` 是作为请求主体被发送的数据\n    // 只适用于这些请求方法 'PUT', 'POST', 和 'PATCH'\n    // 在没有设置 `transformRequest` 时，必须是以下类型之一：\n    // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n    // - 浏览器专属：FormData, File, Blob\n    // - Node 专属： Stream\n    data: {\n        // firstName: 'Fred'\n    },\n    // `timeout` 指定请求超时的毫秒数(0 表示无超时时间)\n    // 如果请求话费了超过 `timeout` 的时间，请求将被中断\n    timeout: 10000,\n    // `withCredentials` 表示跨域请求时是否需要使用凭证\n    withCredentials: false, // 默认的\n    // `adapter` 允许自定义处理请求，以使测试更轻松\n    // 返回一个 promise 并应用一个有效的响应 (查阅 [response docs](#response-api)).\n    // adapter: function (config) {\n    //     /* ... */\n    // },\n    // `auth` 表示应该使用 HTTP 基础验证，并提供凭据\n    // 这将设置一个 `Authorization` 头，覆写掉现有的任意使用 `headers` 设置的自定义 `Authorization`头\n    // base64编码。。。。atob可以解码\n    auth: {\n        username: 'luffy',\n        password: 'orz'\n    },\n    // `responseType` 表示服务器响应的数据类型，可以是 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n    responseType: 'json', // 默认的\n    // `xsrfCookieName` 是用作 xsrf token 的值的cookie的名称\n    xsrfCookieName: 'XSRF-TOKEN', // default\n    // `xsrfHeaderName` 是承载 xsrf token 的值的 HTTP 头的名称\n    xsrfHeaderName: 'X-XSRF-TOKEN', // 默认的\n    // `onUploadProgress` 允许为上传处理进度事件\n    // onUploadProgress: function (progressEvent) {\n    //     // 对原生进度事件的处理\n    // },\n    // // `onDownloadProgress` 允许为下载处理进度事件\n    // onDownloadProgress: function (progressEvent) {\n    //     // 对原生进度事件的处理\n    // },\n    // `maxContentLength` 定义允许的响应内容的最大尺寸\n    maxContentLength: 2000,\n    // `validateStatus` 定义对于给定的HTTP 响应状态码是 resolve 或 reject  promise 。如果 `validateStatus` 返回 `true` (或者设置为 `null` 或 `undefined`)，promise 将被 resolve; 否则，promise 将被 rejecte\n    // validateStatus: function (status) {\n    //     return status >= 200 && status < 300; // 默认的\n    // },\n    // `maxRedirects` 定义在 node.js 中 follow 的最大重定向数目\n    // 如果设置为0，将不会 follow 任何重定向\n    maxRedirects: 5, // 默认的\n    // `httpAgent` 和 `httpsAgent` 分别在 node.js 中用于定义在执行 http 和 https 时使用的自定义代理。允许像这样配置选项：\n    // `keepAlive` 默认没有启用\n\n    // httpAgent: new http.Agent({ keepAlive: true }),\n    // httpsAgent: new https.Agent({ keepAlive: true }),\n\n    // 'proxy' 定义代理服务器的主机名称和端口\n    // `auth` 表示 HTTP 基础验证应当用于连接代理，并提供凭据\n    // 这将会设置一个 `Proxy-Authorization` 头，覆写掉已有的通过使用 `header` 设置的自定义 `Proxy-Authorization` 头。\n    // proxy: {\n    //     host: '127.0.0.1',\n    //     port: 8800,\n    //     // auth: : {\n    //     //     username: 'mikeymike',\n    //     //     password: 'rapunz3l'\n    //     // }\n    // },\n    // `cancelToken` 指定用于取消请求的 cancel token\n    // （查看后面的 Cancellation 这节了解更多）\n    // cancelToken: new CancelToken(function (cancel) {\n    // })\n};\n\n// 结果处理\nconst handleResult = (response) => {\n    const {status, statustText, config, data, request, headers} = response;\n    if ( +status === 200 ){ //请求成功\n        let length = Object.keys(data).length;\n        if( length ) {\n            let {code, msg} = data;\n            if (+code === 200) {\n                logger('service face success!');\n                return Promise.resolve(data);\n            } else {\n                logger('sever return data as: ');\n                logger(data);\n                return Promise.reject(data);\n            }\n        } else {\n            logger('service face success, but no data!');\n            return Promise.reject(new Error('接入服务成功， 但无法连接服务'));\n        }\n    } else {\n        logger('service face failed!');\n        logger(response);\n        return Promise.reject(new Error(response));\n    }\n}\n\n// 错误处理\nconst handleErr = (error) => {\n    logger('service get request throw error:');\n    logger(error);\n    const {config, message, request, response} = error;\n    const {auth, data, url, method} = config;\n    // logger(`service get request throw error: ${typeof error === 'object' ? JSON.stringify(error) : error}. header: ${JSON.stringify(response.headers)} ; query : ${JSON.stringify(query)}`);\n    return Promise.reject({auth, data, url, method, message});\n}\n\n\n\n/**\n * 一步操作封装\n */\n// 异步处理\nconst asyncDima = (promise) => {\n    return promise\n        .then(data => {\n            return [null, data];\n        })\n        .catch(err => [err]);\n}\n\n// dima增加一层处理层\nconst asyncTask = async (asyncFunc, resulter, catcher) => {\n    const [err, res] = await asyncDima(asyncFunc);\n    let rt;\n    if (err) {\n        typeof catcher === 'function' ? rt = catcher(err) : rt = Promise.reject(err);\n    } else {\n        typeof resulter === 'function' ? rt = resulter(res) : rt = Promise.resolve(res);\n    }\n    return await asyncDima(rt);\n}\n/** 封装结束 */\n\n/**\n * 服务对象，实际的请求发起者\n */\nclass Service {\n\n    constructor() {\n        this.auth = {\n            AppKey: '',\n            AppSecret: ''\n        };\n    }\n    __setAuth (auth) {\n        this.auth = {\n            ...this.auth,\n            ...auth\n        }\n    }\n\n    __test() {\n        const config = {\n            url: 'https://api.coindesk.com/v1/bpi/currentprice.json',\n            method: 'get'\n        };\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n\n    /**\n     * 数据处理者，生成加密之后的数据和签名\n     * @param {any}} data 需要进行处理的数据\n     */\n    dataHandler(data) {\n        // 添加AppKey字段\n        data.appkey = this.auth.AppKey\n        data.timestamp = Date.now()\n        const nData = Object.keys(data).reduce((d, key) => {\n            d[key] = encryptData(pubKEY, data[key]);\n            return d;\n        }, {});\n        nData['signature'] = signer(data, this.auth.AppSecret); \n        return nData; \n    }\n\n    /**\n     * 请求的统一处理\n     * @param {object} config 请求的参数\n     */\n    sendRequest(config) {\n        let options = {\n            ...baseConfig,\n            headers: {\n                ...baseConfig.headers,\n                'X-Requested-ID': uuid()\n            },\n            ...config\n        };\n        let {method, data, params} = options;\n        switch(method) {\n            case 'get':           \n                options.params = this.dataHandler(params);\n            break;\n            case 'post':\n                options.data = this.dataHandler(data);\n            break;\n            case 'put':\n                options.data = this.dataHandler(data);\n            break;\n            case 'delete':\n                options.params = this.dataHandler(params);\n            break;\n            case 'patch':\n                options.data = this.dataHandler(data);\n            break;\n            default:\n                Promise.reject(\"请求方法不正确\");\n        }\n        return axios(options)\n    }\n\n    /**\n     * 发送评论\n     * @param {any} data 评论数据\n     */\n    sendComment(data) {\n        // axios.post(constant.ADD_COMMENT_URL, data);\n        const config = {\n            url: constant.ADD_COMMENT_URL,\n            method: 'post',\n            data\n        };\n        // return this.sendRequest(config).then(handleResult).catch(handleErr);\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n\n    /**\n     * 根据评论id删除评论\n     * @param {string} commentId 评论id\n     */\n    deleteComment(commentId){\n        const config = {\n            url: `${constant.DELETE_COMMENT_URL}`,\n            method: 'delete',\n            params: {\n                commentId\n            }\n        };\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n    /**\n     * 根据评论id获取评论\n     * @param {string} commentId 评论id\n     */\n    getCommentById(commentId) {\n        const config = {\n            url: `${constant.GET_COMMENTS_URL}`,\n            params: {\n                commentId\n            }\n        };\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n    /**\n     * 根据用户id删除评论\n     * @param {string} userId 评论id\n     */\n    deleteUserComments(userId) {\n        const config = {\n            url: constant.DELETE_COMMENT_URL,\n            method: 'delete',\n            params: {\n                userId\n            }\n        }\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n\n    /**\n     * \n     */\n    deleteTargetComments(targetId) {\n        const config = {\n            url: constant.DELETE_COMMENT_URL,\n            method: 'delete',\n            params: {\n                targetId\n            }\n        }\n    }\n\n    /**\n     * 根据目标对象id获取评论\n     * @param {string} targetId 评论id\n     */\n    getCommentByTarget(targetId, options) {\n        const config = {\n            url: constant.GET_COMMENTS_URL,\n            params: {\n                targetId,\n                ...options\n            }\n        }\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n\n    /**\n     * 根据用户id和条件获取评论\n     * @param {string} userId 用户id\n     * @param {object} options 设置参数\n     */\n    getCommentByUser(userId, options) {\n        const config = {\n            url: constant.GET_COMMENTS_URL,\n            params: {\n                userId,\n                ...options\n            }\n        }\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n\n    /**\n     * 只会更新extra字段，而不会更改字段\n     * @param {any} data 更新数据   \n     */\n    updateExtra(data) {\n        const config = {\n            url: constant.UPDATEEXTRA,\n            method: 'patch',\n            data\n        };\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);\n    }\n    /**\n     * 替换extra内容\n     * @param {any} data 更新数据   \n     */\n    setExtra(data) {\n        const config = {\n            url: constant.SET_EXTRA,\n            method: 'put',\n            data\n        };\n        return asyncTask(this.sendRequest(config), handleResult, handleErr);   \n    }\n}\n\nmodule.exports = Service\n\n","exports.SERVER_URL = 'http://127.0.0.1:8800/api/';\n// App签名相关接口\n\n// 请求接口\nexports.ADD_COMMENT_URL = '/comments';\nexports.DELETE_COMMENT_URL = '/comments';\nexports.GET_COMMENTS_URL = '/comments';\nexports.SETEXTRA = '/comments';\nexports.UPDATE_EXTRA = '/comments';\n\n","const crypto = require('crypto')\n// 签名算法\nconst signAlgorithm = 'RSA-SHA1';\n\n// 数据的加密算法\n\n\nexports.checkType = (target, dist) => {\n    const dists = dist.split('|');\n    return dists.map(d => d.trim()).some(d => {\n        return ({}).toString.call(target).slice(8, -1).toUpperCase() === d.toUpperCase();\n    })\n\n}\n\nexports.getType = (target) => {\n    return ({}).toString.call(target).slice(8, -1).toLowerCase();\n}\n\nexports.logger = (msg) => {\n    if (typeof msg === 'object') {\n        console.log('[LFment Service logged:]\\n');\n        console.log(msg);\n    } else {\n        console.log('[LFment Service logged:]' + msg);\n    }\n}\n\n\nconst sortKeys = (obj) => {\n    return obj && Object.keys(obj).sort();\n}\n\n/**\n * \n * @param {any} data 数据\n * @param {string} secret appsecret\n */\nconst genSigString = (data, secret) => {\n    const sKeys = sortKeys(data);\n    // 参数的字符串\n    const propStr = sKeys.reduce((str, key) => {\n        str += ''+key;\n        // str += ''+data[key]\n        if (typeof data[key] === 'object') {\n            str += JSON.stringify(data[key]);\n        } else {\n            str += '' + data[key];\n        }\n        return str;\n    }, '');\n    // 头尾分别追加secret键值对\n    return 'secret' + propStr + secret;\n}\n\n// 生成签名 校验是否是可信赖的平台发起的请求\nconst signer = (data, secret) => {\n    // 额外的信息\n    data.version = '1.0';\n    data.format = 'json';\n    const rtStr = genSigString(data, secret);\n    // 签名\n    return genSignature(rtStr);\n}\n\n/**\n * 就简单生成对应算法的签名\n * @param {string} alg 签名算法\n * @param {string} key 公钥\n * @param {string} data 数据\n */\nconst genSignature= (data, alg = 'md5') => {\n    let sign = crypto.createHash(alg);\n    sign.update(data);\n    return sign.digest('hex')\n}\n\n/**\n * 就简单的对签名进行校验\n * @param {string} alg 算法\n * @param {string} sig 签名\n * @param {string} secret 秘钥\n * @param {string} data 实体数据\n */\nconst verifier = (data, sig, secret, alg = 'md5') => {\n    const signature = signer(data, secret);\n    return sig === signature\n    // return sig === genSignature(data, alg)\n}\n\n/**\n * 加盐\n * @param {string} salt 盐\n * @param {string} secret 加盐串\n * @param {string} alg 加盐算法\n */\nconst salt = (salt, secret, alg) => {\n    const saltAlg = crypto.createHash(alg);\n    return saltAlg.update(salt + secret + salt).digest('hex');\n}\n\n// // 对数据部分使用公钥进行加密 防止数据泄露\n// exports.encryptDataPublic = function (data) {\n//     return pubKEY.encrypt(data, 'base64', 'utf-8')\n// }\n\n/**\n * 加密数据\n * @param {NodeRSA} key 加密对象\n * @param {any} data 加密数据   \n */\nexports.encryptData = function rencrypt(key, data) {\n    if (typeof data === 'object') {\n        let rt = {}\n        Object.keys(data).forEach(k => {\n            rt[k] = rencrypt(key, data[k])\n        })\n        return rt\n    }\n    return key.encrypt(data, 'base64', 'utf-8');\n}\n\nexports.verifier = verifier\n\nexports.signer = signer","const comments = require('./src/comment')\r\nconst utils = require('./src/utils')\r\n\r\nexports.sdk = comments\r\nexports.utils = utils\r\nexports.default = comments","'use strict'\n\nconst utils = require('./utils');\nconst Service = require('./service');\nconst service = new Service();\n\nclass LFment {\n    constructor(Appkey, AppSecret) {\n        this.App = {};\n        this.config = {};\n        this.init(Appkey, AppSecret);\n        return this;\n    }\n\n    /**\n     * 初始化\n     * @param {string|object} AppKey appkey  \n     * @param {string} AppSecret 秘钥\n     */\n    init(AppKey, AppSecret) {\n        if (typeof AppSecret === 'string') {\n            this.App = {\n                AppKey,\n                AppSecret\n            }\n        }\n\n        if (utils.checkType(AppKey, 'Object')) {\n            this.App = {\n                ...this.App,\n                ...AppKey\n            }\n        }\n        service.__setAuth(this.App);\n        return this;\n    }\n    /**\n     * 加载配置项\n     */\n    loadConfig(config) {\n        this.config = config;\n        return this;\n    }\n    /**\n     * 是否可以发送请求\n     */\n    __checkCanRequest() {\n        if (typeof this.App === 'object') {\n            return this.App.Appkey && this.App.AppSecret ? true : false;\n        }\n        return false;\n    }\n\n    __test() {\n        return service.__test();\n    }\n\n    sendComment(comment) {\n        let lackPropName;\n        const requestPropName = ['targetId', 'userId', 'content', 'createdTime', 'updatedTime'];\n        let isStandar = requestPropName.every(propName => {\n            if (propName in comment) {\n                return true;\n            }\n            lackPropName = propName;\n            return false;\n        })\n        if (!isStandar) {\n            return Promise.reject((`评论数据\b格式不正确，缺少\b参数${lackPropName}`))\n        }\n        return service.sendComment(comment);\n    }\n\n    deleteCommentById(commentId) {\n        if (!commentId) {\n            return Promise.reject('请传人相关参数')\n        }\n        return service.deleteComment(commentId)\n    }\n\n    deleteCommentsByUser(userId) {\n        if (!userId) {\n            return Promise.reject('请传人相关参数')\n        }\n        return service.deleteUserComments(userId);\n    }\n\n    deleteCommentsByTarget(targetId) {\n        if (!targetId) {\n            return Promise.reject('请传人相关参数')\n        }\n        return service.deleteTargetComments(targetId);\n    }\n\n    getCommentById(commentId) {\n        if (!commentId) {\n            return Promise.reject('请传人相关参数')\n        }\n        return service.getCommentById(commentId);\n    }\n\n    getCommentByTarget(targetId, options) {\n        if (!targetId) {\n            return Promise.reject('请传人相关参数')\n        }\n        if (utils.checkType(options, 'object')) {\n            let valideProps = ['count', 'group', 'sort'];\n            options = valideProps.reduce((obj, prop) => {\n                obj[prop] = options[prop];\n                return obj;\n            }, {});\n        }\n        return service.getCommentByTarget(targetId, options);\n    }\n\n    getCommentByUser(userId, options) {\n        if (!userId) {\n            return Promise.reject('请传人相关参数')\n        }\n        if (utils.checkType(options, 'object')) {\n            let valideProps = ['count', 'group', 'sort'];\n            options = valideProps.reduce((obj, prop) => {\n                obj[prop] = options[prop];\n                return obj;\n            }, {});\n        }\n        return service.getCommentByUser(userId, options);\n    }\n\n    setExtra(extra) {\n        if (!extra) {\n            return Promise.reject('请传人相关参数')\n        }\n        return service.setExtra(extra); \n    }\n\n    updateExtra(propName,value) {\n        if (!propName) {\n            return Promise.reject('请传人相关参数')\n        }\n        let data;\n        if (typeof value !== 'undefined') {\n            data = {\n                [propName]: value\n            }\n        } else {\n            data = propName;\n        }\n        return service.updateExtra(data);\n    }\n}\n\nmodule.exports = LFment"],"sourceRoot":""}